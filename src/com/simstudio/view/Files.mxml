<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="700" height="488" creationComplete="init();">
	<fx:Declarations>
		<mx:NumberFormatter id="numberFormatter" precision="2" />
	</fx:Declarations>
	
	
	<fx:Script>
		<![CDATA[
			import mx.containers.Canvas;
			import mx.containers.HBox;
			import mx.controls.Alert;
			import mx.controls.Image;
			
			import spark.components.Label;
			import spark.formatters.NumberFormatter;
			private var fileRef:FileReference;
			
			private const FILE_UPLOAD_URL:String = "http://localhost:8080/Upload/WebContent/WEB-INF/upload.jsp";
			
			private var _newCanvas:Canvas;
			
			/**
			 * the instance of the edit popup showed
			 */
			private var _openEditPopUp:Canvas;
			
			/**
			 * the instance of the edit popup showed
			 */
			private var _lastOpenedEditButton:Image;
			
			private var _imgEditOver:String = "assets/edit_black.png";
			private var _imgEditOut:String = "assets/edit_white.png";
			
			
			private function init():void {
				fileRef = new FileReference();
				fileRef.addEventListener(Event.SELECT, fileRef_select);
				fileRef.addEventListener(ProgressEvent.PROGRESS, fileRef_progress);
				fileRef.addEventListener(Event.COMPLETE, fileRef_complete);
				
				addGroup();
				addGroup();
			}
			
			private function browseAndUpload():void {
				fileRef.browse();
				message.text = "";
			}
			
			private function fileRef_select(evt:Event):void {
				try {
					message.text = "size (Mo): " + numberFormatter.format(((fileRef.size/1024)/1024));
					fileRef.upload(new URLRequest(FILE_UPLOAD_URL));
				} catch (err:Error) {
					message.text = "ERROR: zero-byte file";
				}
			}
			
			private function fileRef_progress(evt:ProgressEvent):void {
				progressBar.visible = true;
			}
			
			private function fileRef_complete(evt:Event):void {
				message.text += " (complete)";
				progressBar.visible = false;
			}
			
			import mx.collections.ArrayCollection;
			[Bindable] private var mesDonnees_AC:ArrayCollection = new ArrayCollection([
				{Type:"Voiture", Marque:"Renault", 
					Couleur:"Rouge", activation:true, prix:80000}, 
				{Type:"Voiture", Marque:"Renault", 
					Couleur:"Vert", activation:false, prix:35000},  
				{Type:"Voiture", Marque:"Peugeot", 
					Couleur:"Jaune", activation:false, prix:22300},  
				{Type:"Voiture", Marque:"Citroen", 
					Couleur:"Orange", activation:false, prix:20000},  
				{Type:"Moto", Marque:"Honda", 
					Couleur:"Rouge", activation:false, prix:20000}, 
				{Type:"Moto", Marque:"Honda", 
					Couleur:"Rouge", activation:false, prix:30000},  
				{Type:"Moto", Marque:"Yamaha", 
					Couleur:"Rouge", activation:true, prix:3000},  
				{Type:"Moto", Marque:"Yamaha", 
					Couleur:"Rouge", activation:false, prix:1200} ]);
			
			
			private function addGroup():void {
				
				var imageEdit:Image = new Image();
				imageEdit.width=35;
				imageEdit.height=34;
				imageEdit.load(this._imgEditOut);
				imageEdit.buttonMode=true;
				imageEdit.addEventListener(MouseEvent.CLICK, OpenEditPopUp);
				
				var groupLabel:spark.components.Label = new spark.components.Label();
				groupLabel.text = "SimStudio";
				groupLabel.setStyle("fontSize", 12);
				groupLabel.setStyle("fontWeight", "bold");
				groupLabel.x = 50;
				groupLabel.y = 13;
				groupLabel.buttonMode=true;
				groupLabel.addEventListener(MouseEvent.MOUSE_OVER, HighlightGroupLink);
				groupLabel.addEventListener(MouseEvent.MOUSE_OUT, DarkenGroupLink);
				groupLabel.addEventListener(MouseEvent.CLICK, OpenGroup);
				
				var lastMessageLabel:spark.components.Label = new spark.components.Label();
				lastMessageLabel.text = "(Modifier le 15/01/12 Ã  08h00)";
				lastMessageLabel.setStyle("fontSize", 12);
				lastMessageLabel.setStyle("fontStyle", "italic");
				lastMessageLabel.x = 500;
				lastMessageLabel.y = 13;
				
				var myCanvas:Canvas = new Canvas();
				myCanvas.setStyle("marginTop", "5");
				myCanvas.setStyle("backgroundColor", "#707070");
				
				myCanvas.setStyle("y", 25);
				myCanvas.width=720;
				myCanvas.height=35;
				myCanvas.id = "Groups1";
				myCanvas.addChild(imageEdit);
				myCanvas.addChild(groupLabel);
				myCanvas.addChild(lastMessageLabel);
				myCanvas.addEventListener(MouseEvent.MOUSE_OVER, HighlightBackground);
				myCanvas.addEventListener(MouseEvent.MOUSE_OUT, DarkenBackground);
				
				var myHbox:HBox = new HBox();
				myHbox.width=720;
				myHbox.height=35;
				myHbox.addChild(myCanvas);
				myVbox.addChild(myHbox);
			}
			
			private function HighlightBackground(e:Event):void {
				var myCanvas:Canvas = e.currentTarget as Canvas;
				myCanvas.setStyle("backgroundColor", "#989898");
			}
			
			private function DarkenBackground(e:Event):void {
				var myCanvas:Canvas = e.currentTarget as Canvas;
				myCanvas.setStyle("backgroundColor", "#707070");
			}
			
			private function OpenGroup(e:Event):void {
				Alert.show("todo link to the group");
			}
			
			private function HighlightGroupLink(e:Event):void {
				var link:spark.components.Label = e.currentTarget as spark.components.Label;
				link.setStyle("color", "#333333");
			}
			
			private function DarkenGroupLink(e:Event):void {
				var link:spark.components.Label = e.currentTarget as spark.components.Label;
				link.setStyle("color", "#ffffff");
			}
			
			/**
			 * Open the edit popup and close 
			 */
			private function OpenEditPopUp(e:Event):void {
				var editBtn:Image = e.currentTarget as Image;
				
				if(_lastOpenedEditButton == null){
					_lastOpenedEditButton = editBtn;
				}
				else {
					_lastOpenedEditButton.load(_imgEditOut)
					_lastOpenedEditButton = editBtn;
				}
				
				if(_openEditPopUp == null)
				{
					editBtn.load(_imgEditOver);
					configureEditPopUP(editBtn);
					this['globalCanvas'].addChild(_openEditPopUp);
				}
				else {
					this['globalCanvas'].removeChild(_openEditPopUp);
					_openEditPopUp = null;
					editBtn.load(_imgEditOut);
				}
			}
			
			/**
			 * @todo refactored to show admin only when the user is the group admin
			 * Configure the edit popup with right submenu
			 */
			private function configureEditPopUP(editBtn:Image):void {
				_openEditPopUp = new Canvas();
				_openEditPopUp.width=130;
				_openEditPopUp.height=110;
				_openEditPopUp.setStyle("backgroundColor", "#f0eded");
				_openEditPopUp.x=5;
				_openEditPopUp.y=editBtn.parent.parent.y+44;
				
				var shareFileMenu:spark.components.Label = new spark.components.Label();
				shareFileMenu.width=130;
				shareFileMenu.height=25;
				shareFileMenu.text="Share File";
				shareFileMenu.setStyle("textAlign", "center");
				shareFileMenu.setStyle("color", "#000000");
				shareFileMenu.setStyle("fontWeight", "bold");
				shareFileMenu.setStyle("verticalAlign", "middle");
				shareFileMenu.y=10;
				shareFileMenu.buttonMode=true;
				shareFileMenu.addEventListener(MouseEvent.MOUSE_OVER, HighlightMenuLabelBackground);
				shareFileMenu.addEventListener(MouseEvent.MOUSE_OUT, DarkenMenuLabelBackground);
				shareFileMenu.addEventListener(MouseEvent.CLICK, leaveGroup);
				
				var deleteFileMenu:spark.components.Label = new spark.components.Label();
				deleteFileMenu.width=130;
				deleteFileMenu.height=25;
				deleteFileMenu.text="Delete File";
				deleteFileMenu.setStyle("textAlign", "center");
				deleteFileMenu.setStyle("color", "#000000");
				deleteFileMenu.setStyle("fontWeight", "bold");
				deleteFileMenu.setStyle("verticalAlign", "middle");
				deleteFileMenu.y=35;
				deleteFileMenu.buttonMode=true;
				deleteFileMenu.addEventListener(MouseEvent.MOUSE_OVER, HighlightMenuLabelBackground);
				deleteFileMenu.addEventListener(MouseEvent.MOUSE_OUT, DarkenMenuLabelBackground);
				deleteFileMenu.addEventListener(MouseEvent.CLICK, leaveGroup);
				
				var downloadFileMenu:spark.components.Label = new spark.components.Label();
				downloadFileMenu.width=130;
				downloadFileMenu.height=25;
				downloadFileMenu.text="Download File";
				downloadFileMenu.setStyle("textAlign", "center");
				downloadFileMenu.setStyle("color", "#000000");
				downloadFileMenu.setStyle("fontWeight", "bold");
				downloadFileMenu.setStyle("verticalAlign", "middle");
				downloadFileMenu.y=60;
				downloadFileMenu.buttonMode=true;
				downloadFileMenu.addEventListener(MouseEvent.MOUSE_OVER, HighlightMenuLabelBackground);
				downloadFileMenu.addEventListener(MouseEvent.MOUSE_OUT, DarkenMenuLabelBackground);
				downloadFileMenu.addEventListener(MouseEvent.CLICK, leaveGroup);
				
				var EditFileMenu:spark.components.Label = new spark.components.Label();
				EditFileMenu.width=130;
				EditFileMenu.height=25;
				EditFileMenu.text="Edit File";
				EditFileMenu.setStyle("textAlign", "center");
				EditFileMenu.setStyle("color", "#000000");
				EditFileMenu.setStyle("fontWeight", "bold");
				EditFileMenu.setStyle("verticalAlign", "middle");
				EditFileMenu.y=85;
				EditFileMenu.buttonMode=true;
				EditFileMenu.addEventListener(MouseEvent.MOUSE_OVER, HighlightMenuLabelBackground);
				EditFileMenu.addEventListener(MouseEvent.MOUSE_OUT, DarkenMenuLabelBackground);
				EditFileMenu.addEventListener(MouseEvent.CLICK, leaveGroup);
				
				_openEditPopUp.addChild(shareFileMenu);
				_openEditPopUp.addChild(deleteFileMenu);
				_openEditPopUp.addChild(downloadFileMenu);
				_openEditPopUp.addChild(EditFileMenu);
			}
			
			private function HighlightMenuLabelBackground(e:Event):void {
				var link:spark.components.Label = e.currentTarget as spark.components.Label;
				link.setStyle("backgroundColor", "#f09620");
				link.setStyle("color", "#ffffff");
			}
			
			/**
			 * Remove highlight on the popup menu on mouse over
			 */
			private function DarkenMenuLabelBackground(e:Event):void {
				var link:spark.components.Label = e.currentTarget as spark.components.Label;
				link.setStyle("backgroundColor", "#f0eded");
				link.setStyle("color", "#000000");
			}
			
			private function leaveGroup(e:Event):void {
				Alert.show("Todo implement leave group action");
			}
			
		]]>
	</fx:Script>
	<mx:Canvas id="globalCanvas" x="1" y="52">
	<mx:VBox id="myVbox" x="5" y="10" width="720" height="700" verticalAlign="top" direction="vertical" maxWidth="720" />
	<!--<mx:HBox id="myHbox" x="5" y="10" width="1214" height="700" verticalAlign="top" direction="vertical" maxWidth="720" />-->
	</mx:Canvas>
	<mx:Button id="btnUpload" x="6" y="13" width="107" height="30" label="Upload file"
			   click="browseAndUpload();" color="#FFFFFF" fontSize="15" fontWeight="bold"
			   textRollOverColor="#ffb400"/>
	<mx:Label id="message" x="312" y="17"/>
	<mx:ProgressBar id="progressBar" visible="false" x="130" y="12" indeterminate="true"/>
	
</s:Group>
